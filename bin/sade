#!/usr/bin/env php

<?php

$rootDir = realpath(__DIR__ . '/../');

// Autoloader for standalone install.
$autoloader = realpath($rootDir . '/vendor/autoload.php');

if (!$autoloader) {
    // Installed via `composer [global] require`.
    $autoloader = realpath($rootDir . '/../../autoload.php');
}

if (! $autoloader) {
    throw new RuntimeException('Unable to find its autoloader');
}

require_once $autoloader;

$climate = new League\CLImate\CLImate;
$climate->arguments->add([
    'ext' => [
        'prefix'       => 'e',
        'longPrefix'   => 'ext',
        'description'  => 'Extension of generated file',
        'defaultValue' => 'html',
    ],
    'src' => [
        'prefix'      => 's',
        'longPrefix'  => 'src',
        'description' => 'Source directory, example: "examples/**/*.php"',
    ],
    'out' => [
        'prefix'       => 'o',
        'longPrefix'   => 'out',
        'description'  => 'Output directory',
        'defaultValue' => 'build'
    ],
    'help' => [
        'longPrefix'  => 'help',
        'description' => 'Prints a usage statement',
        'noValue'     => true,
    ],
]);

$climate->arguments->parse();

if ($climate->arguments->get('help')) {
    $climate->usage();
    exit;
}

$src = $climate->arguments->get('src');

if (empty($src)) {
    $climate->error('Source value is empty');
    exit;
}

$dir   = getcwd();
$ext   = '.' . ltrim($climate->arguments->get('ext'), '.');
$ext   = empty($ext) || $ext === '.' ? '.html' : $ext;
$out   = $climate->arguments->get('out');
$sade  = new Sade\Sade;
$path  = $dir . '/' . $src;
$files = Webmozart\Glob\Glob::glob($path);

foreach ($files as $file) {
    $dest = $dir . '/' . ltrim($out, '/') . '/';

    @mkdir($dest, 0755, false);

    if (basename($file) === 'index.php') {
        $dest = $dest . basename(str_replace('index.php', '', $file)) . $ext;
    } else {
        $dest = str_replace('.php', $ext, $dest . basename($file));
    }

    if (empty(pathinfo($dest, PATHINFO_EXTENSION))) {
       continue;
    }

    if (file_exists($dest)) {
        unlink($dest);
    }

    $output = $sade->render($file);

    if (empty($output)) {
        continue;
    }

    $climate->out('Creating ' . $dest);

    file_put_contents($dest, $output);
}
